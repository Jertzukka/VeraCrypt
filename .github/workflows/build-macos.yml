name: Build and test MacOS

on:
  push:
    branches: [ "ci" ]
    paths:
      - 'src/**'
      - '!src/Common/Language.xml'
      - '.github/workflows/build-macos.yml'
  pull_request:
    branches: [ "ci" ]
    paths:
      - 'src/**'
      - '!src/Common/Language.xml'
      - '.github/workflows/build-macos.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  WXWIDGETS_VERSION: 3.2.5
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  macos-12-macfuse:

    runs-on: macos-12
    timeout-minutes: 45

    steps:
    - uses: actions/checkout@v4
    - name: Install pcsc-lite
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install pcsc-lite
    - name: Install yasm
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install yasm
    - name: Install macfuse
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask macfuse
    - name: Test
      run: pkg-config fuse --libs && pkg-config fuse --cflags && cat /usr/local/lib/pkgconfig/fuse.pc && ls -la /usr/local/include
    - name: Download wxWidgets archive
      run: |
        gh release download --repo wxWidgets/wxWidgets v$WXWIDGETS_VERSION -p "wxWidgets-$WXWIDGETS_VERSION.tar.bz2"
        mkdir "wxWidgets-$WXWIDGETS_VERSION"
        tar -xf "wxWidgets-$WXWIDGETS_VERSION.tar.bz2" -C "wxWidgets-$WXWIDGETS_VERSION" --strip-components 1

    - name: Check for wxWidgets build cache
      id: cache-wxwidgets
      uses: actions/cache@v4

      with:
        path: src/wxrelease
        key: ${{ github.job }}-wx${{ env.WXWIDGETS_VERSION }}-${{ hashFiles('src/Makefile') }}-${{ hashFiles('.github/workflows/build-macos.yml') }}

    - if: ${{ steps.cache-wxwidgets.outputs.cache-hit != 'true' }}
      name: Build wxWidgets
      run: |
        make WXSTATIC=FULL WITHGTK3=1 WX_ROOT=${{ github.workspace }}/wxWidgets-$WXWIDGETS_VERSION -C src wxbuild
    - name: Build VeraCrypt
      run: make WXSTATIC=FULL WITHGTK3=1 WX_ROOT=${{ github.workspace }}/wxWidgets-$WXWIDGETS_VERSION -C src
    - name: Test binary
      run: |
        ./src/Main/veracrypt --text --test && ./src/Main/veracrypt --text --version

  macos-latest-fuset:

    runs-on: macos-latest
    timeout-minutes: 45

    steps:
    - uses: actions/checkout@v4
    - name: Install pcsc-lite
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install pcsc-lite
    - name: Install yasm
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install yasm
    - name: Install fuse-t
      run: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew install macos-fuse-t/homebrew-cask/fuse-t
        mkdir -p /usr/local/include
        ln -s /Library/Application\ Support/fuse-t/include/fuse /usr/local/include/fuse
        ls -la /usr/local/include
    - name: Test
      run: |
        pkg-config fuse-t --libs
        pkg-config fuse-t --cflags
        cat /usr/local/lib/pkgconfig/fuse-t.pc
        ls -la /Library/Application\ Support/fuse-t/include/fuse
    - name: Download wxWidgets archive
      run: |
        gh release download --repo wxWidgets/wxWidgets v$WXWIDGETS_VERSION -p "wxWidgets-$WXWIDGETS_VERSION.tar.bz2"
        mkdir "wxWidgets-$WXWIDGETS_VERSION"
        tar -xf "wxWidgets-$WXWIDGETS_VERSION.tar.bz2" -C "wxWidgets-$WXWIDGETS_VERSION" --strip-components 1
  
    - name: Check for wxWidgets build cache
      id: cache-wxwidgets
      uses: actions/cache@v4
  
      with:
        path: src/wxrelease
        key: ${{ github.job }}-wx${{ env.WXWIDGETS_VERSION }}-${{ hashFiles('src/Makefile') }}-${{ hashFiles('.github/workflows/build-macos.yml') }}
  
    - if: ${{ steps.cache-wxwidgets.outputs.cache-hit != 'true' }}
      name: Build wxWidgets
      run: |
        make WITHFUSET=1 WXSTATIC=FULL WITHGTK3=1 WX_ROOT=${{ github.workspace }}/wxWidgets-$WXWIDGETS_VERSION -C src wxbuild
    - name: Build VeraCrypt
      run: make WITHFUSET=1 WXSTATIC=FULL WITHGTK3=1 WX_ROOT=${{ github.workspace }}/wxWidgets-$WXWIDGETS_VERSION -C src
    - name: Test binary and mounting volumes
      run: |
        ./src/Main/veracrypt --text --test && ./src/Main/veracrypt --text --version
        sudo ./src/Main/veracrypt --text --non-interactive Tests/test.sha256.hc --hash sha256 --slot 1 --password test --mount-options=ro
        sudo ./src/Main/veracrypt --text --non-interactive Tests/test.sha512.hc --hash sha512 --slot 2 --password test --mount-options=ro
        sudo ./src/Main/veracrypt --text --non-interactive Tests/test.streebog.hc --hash streebog --slot 3 --password test --mount-options=ro
        sudo ./src/Main/veracrypt --text --non-interactive Tests/test.whirlpool.hc --hash whirlpool --slot 4 --password test --mount-options=ro
        sudo ./src/Main/veracrypt --text --list
        sudo ./src/Main/veracrypt -d
